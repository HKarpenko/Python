import random
from turtle import fd, bk, rt, lt, up, down, tracer, goto, speed, fillcolor, begin_fill, end_fill
tracer(0,1)
def kwadr(roz,kol):
    fillcolor(kol)
    begin_fill()
    for i in range(4):
        fd(roz)
        rt(90)
    end_fill()
R=12
def chod1(n,kl):
    for i in range(n):
        kwadr(R,kl)
        fd(R)
        
def chod2(n,kl):
    for i in range(n):
        kwadr(R,kl)
        rt(90)
        fd(R)
        lt(90)
        
def chod3(n,m):
    up()
    bk(n*R)
    rt(90)
    fd(m*R)
    lt(90)
    down()
def chod4(n,m):
    up()
    bk(n*R)
    lt(90)
    fd(m*R)
    rt(90)
    down()

def cyf(n):
    kolor=random.choice(['Black', 'Blue','Brown','Cyan','Green','Grey','Magenta','Orange','Pink','Purple','Red'])
    if n=='0':
        chod1(3,kolor)
        rt(90)
        fd(R)
        lt(90)
        chod2(3,kolor)
        bk(4*R)
        lt(90)
        fd(3*R)
        rt(90)
        chod2(3,kolor)
        fd(R)
        chod1(3,kolor)
        chod4(0,4)
    elif n=='1':
        chod2(4,kolor)
        bk(R)
        chod1(3,kolor)
        bk(3*R)
        lt(90)
        up()
        fd(3*R)
        rt(90)
        down()
        kwadr(R,kolor)
        chod4(-2,1)
    elif n=='2':
        chod1(3,kolor)
        rt(90)
        fd(R)
        lt(90)
        kwadr(R,kolor)
        chod3(2,1)
        chod1(2,kolor)
        chod3(3,1)
        kwadr(R,kolor)
        chod3(1,1)
        chod1(5,kolor)
        chod4(5,3)
        kwadr(R,kolor)
        chod4(-4,1)
    elif n=='3':
        up()
        bk(R)
        down()
        chod1(4,kolor)
        chod3(0,1)
        kwadr(R,kolor)
        chod3(3,1)
        chod1(3,kolor)
        chod3(0,1)
        kwadr(R,kolor)
        chod3(4,1)
        chod1(4,kolor)
        chod4(0,4)
    elif n=='4':
        kwadr(R,kolor)
        chod3(1,1)
        kwadr(R,kolor)
        chod3(0,1)
        chod1(5,kolor)
        chod3(3,1)
        chod2(2,kolor)
        chod4(0,5)
    elif n=='5':
        up()
        bk(R)
        down()
        chod1(5,kolor)
        chod3(5,1)
        chod2(1,kolor)
        chod1(4,kolor)
        chod3(0,1)
        kwadr(R,kolor)
        chod3(4,1)
        chod1(4,kolor)
        chod4(-1,4)
    elif n=='6':
        chod1(3,kolor)
        chod3(4,1)
        chod2(3,kolor)
        chod4(-1,2)
        chod1(3,kolor)
        chod3(0,1)
        kwadr(R,kolor)
        chod3(3,1)
        chod1(3,kolor)
        chod4(0,4)
    elif n=='7':
        up()
        bk(R)
        down()
        chod1(5,kolor)
        chod3(2,1)
        kwadr(R,kolor)
        chod3(2,1)
        chod1(3,kolor)
        chod3(3,1)
        kwadr(R,kolor)
        chod3(1,1)
        kwadr(R,kolor)
        chod4(-5,4)
    elif n=='8':
        chod1(3,kolor)
        chod3(0,1)
        kwadr(R,kolor)
        chod3(4,0)
        kwadr(R,kolor)
        chod3(-1,1)
        chod1(3,kolor)
        chod3(0,1)
        kwadr(R,kolor)
        chod3(4,0)
        kwadr(R,kolor)
        chod3(-1,1)
        chod1(3,kolor)
        chod4(0,4)
    elif n=='9':
        chod1(3,kolor)
        chod3(4,1)
        kwadr(R,kolor)
        chod3(-4,0)
        chod2(3,kolor)
        chod4(3,2)
        chod1(3,kolor)
        chod3(3,2)
        chod1(3,kolor)
        chod4(0,4)
        
def narys(n):
    for i in range(len(str(n))):
       cyf(str(n)[i])

narys(9)
chod3(-1,4)
narys(6)
chod4(-1,3)
narys(5)
chod3(2,5)
narys(0)
chod3(-1,4)
narys(7)
chod3(9,1)
narys(2)
chod4(7,1)
narys(3)
chod4(9,5)
narys(8)
chod3(0,4)
narys(1)
chod3(8,0)
narys(5)
chod4(3,9)
narys(4)
chod3(4,4)
narys(6)
chod4(6,4)
narys(3)
chod3(2,5)
narys(1)
chod3(2,6)
narys(7)
chod3(0,3)
narys(0)
chod3(6,4)
narys(9)
chod4(-8,4)
narys(2)
chod3(-5,2)
narys(4)
chod3(8,3)
narys(6)
chod4(-1,1)
narys(0)
chod3(15,4)
narys(8)
